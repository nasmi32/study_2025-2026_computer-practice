---
## Author
author:
  name: Мишина Анастасия Алексеевна
  orcid: 0009-0002-6246-7100
  email: 1132226532@pfur.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
title: "Отчет по лабораторной работе №2"
subtitle: "Компьютерный практикум по статистическому анализу данных"
license: "CC BY"
## Generic options
lang: ru-RU
number-sections: true
toc: true
toc-title: "Содержание"
toc-depth: 2
## Crossref customization
crossref:
  lof-title: "Список иллюстраций"
  lot-title: "Список таблиц"
  lol-title: "Листинги"
## Bibliography
bibliography:
  - bib/cite.bib
csl: _resources/csl/gost-r-7-0-5-2008-numeric.csl
## Formats
format:
### Pdf output format
  pdf:
    toc: true
    number-sections: true
    colorlinks: false
    toc-depth: 2
    lof: true # List of figures
    lot: true # List of tables
#### Document
    documentclass: scrreprt
    papersize: a4
    fontsize: 12pt
    linestretch: 1.5
#### Language
    babel-lang: russian
    babel-otherlangs: english
#### Biblatex
    cite-method: biblatex
    biblio-style: gost-numeric
    biblatexoptions:
      - backend=biber
      - langhook=extras
      - autolang=other*
#### Misc options
    csquotes: true
    indent: true
    header-includes: |
      \usepackage{indentfirst}
      \usepackage{float}
      \floatplacement{figure}{H}
      \usepackage[math,RM={Scale=0.94},SS={Scale=0.94},SScon={Scale=0.94},TT={Scale=MatchLowercase,FakeStretch=0.9},DefaultFeatures={Ligatures=Common}]{plex-otf}
### Docx output format
  docx:
    toc: true
    number-sections: true
    toc-depth: 2
---

# Цель работы

Основная цель работы -- изучить несколько структур данных, реализованных в Julia, научиться применять их и операции над ними для решения задач.

# Задание

1. Используя Jupyter Lab, повторите примеры.
2. Выполните задания для самостоятельной работы.

# Теоретическое введение

Julia -- высокоуровневый свободный язык программирования с динамической типизацией, созданный для математических вычислений [@julialang]. Эффективен также и для написания программ общего назначения. Синтаксис языка схож с синтаксисом других математических языков, однако имеет некоторые существенные отличия.

Для выполнения заданий была использована официальная документация Julia [@juliadoc].

Рассмотрим несколько структур данных, реализованных в Julia.
Несколько функций (методов), общих для всех структур данных:

- isempty() -- проверяет, пуста ли структура данных;
- length() -- возвращает длину структуры данных;
- in() -- проверяет принадлежность элемента к структуре;
- unique() -- возвращает коллекцию уникальных элементов структуры,
- reduce() -- свёртывает структуру данных в соответствии с заданным бинарным оператором;
- maximum() (или minimum()) -- возвращает наибольший (или наименьший) результат вызова функции для каждого элемента структуры данных.

# Выполнение лабораторной работы

Для начала выполним примеры из раздела про кортежи ([рис. @fig-001]). Кортеж (Tuple) -- структура данных (контейнер) в виде неизменяемой индексируемой последовательности элементов какого-либо типа (элементы индексируются с единицы).

![Примеры использования кортежей](image/1.png){#fig-001 width=70%}

Теперь выполним примеры из раздела про словари ([рис. @fig-002]). Словарь -- неупорядоченный набор связанных между собой по ключу данных.

![Примеры использования словарей](image/2.png){#fig-002 width=70%}

Выполним примеры из раздела про множества ([рис. @fig-003]). Множество, как структура данных в Julia, соответствует множеству, как математическому объекту, то есть является неупорядоченной совокупностью элементов какого-либо типа. Возможные операции над множествами: объединение, пересечение, разность; принадлежность элемента множеству.

![Примеры использования множеств](image/3.png){#fig-003 width=70%}

Выполним примеры из раздела про массивы ([рис. @fig-004] - [рис. @fig-008]). Массив — коллекция упорядоченных элементов, размещённая в многомерной сетке. Векторы и матрицы являются частными случаями массивов.

![Примеры использования массивов](image/4.png){#fig-004 width=70%}

![Примеры использования массивов](image/5.png){#fig-005 width=70%}

![Примеры использования массивов](image/6.png){#fig-006 width=70%}

![Примеры использования массивов](image/7.png){#fig-007 width=70%}

![Примеры использования массивов](image/8.png){#fig-008 width=70%}

Теперь перейдем к выполнению заданий.

**Задание №1**

Даны множества: $A = {0, 3, 4, 9}, B = {1, 3, 4, 7}, C = {0, 1, 2, 4, 7, 8, 9}$. Найдем $P = A \cap B \cup A \cap B \cup A \cap C \cup B \cap C$ ([рис. @fig-009]).

![Задание №1. Работа с множествами](image/9.png){#fig-009 width=70%}

**Задание №2**

Приведем свои примеры с выполнением операций над множествами элементов разных типов ([рис. @fig-010]).

![Задание №2. Примеры операций над множествами элементов разных типов](image/10.png){#fig-010 width=70%}

**Задание №3**

Создадим массивы разными способами, используя циклы ([рис. @fig-011] - [рис. @fig-017]).

![Задание №3. Работа с массивами](image/11.png){#fig-011 width=70%}

![Задание №3. Работа с массивами](image/12.png){#fig-012 width=70%}

![Задание №3. Работа с массивами](image/13.png){#fig-013 width=70%}

![Задание №3. Работа с массивами](image/14.png){#fig-014 width=70%}

![Задание №3. Работа с массивами](image/15.png){#fig-015 width=70%}

![Задание №3. Работа с массивами](image/16.png){#fig-016 width=70%}

![Задание №3. Работа с массивами](image/17.png){#fig-017 width=70%}

**Задание №4**

Создадим массив squares, в котором будут храниться квадраты всех целых чисел от 1 до 100 ([рис. @fig-018]).

![Задание №4](image/18.png){#fig-018 width=70%}

**Задание №5**

Подключим пакет Primes (функции для вычисления простых чисел). Сгенерируем массив myprimes, в котором будут храниться первые 168 простых чисел. Определим 89-е наименьшее простое число. Получии срез массива с 89-го до 99-го элемента включительно, содержащий наименьшие простые числа ([рис. @fig-019]).

![Задание №5. Работа с пакетом Primes](image/19.png){#fig-019 width=70%}

**Задание №6**

Вычислим следующие выражения ([рис. @fig-020]).

$$
\sum_{i=10}^{100}(i^3 +4i^2);
$$

$$
\sum_{i=1}^{M}(\frac{2^i}{i} + \frac{3^i}{i^2}), M=25;
$$

$$
1 + \frac{2}{3} + \left(\frac{2}{3}\frac{4}{5}\right) + \left(\frac{2}{3}\frac{4}{5}\frac{6}{7}\right) + \dots + \left(\frac{2}{3}\frac{4}{5}\dots\frac{39}{39}\right).
$$

![Задание №6](image/20.png){#fig-020 width=70%}

# Выводы

В результате выполнения данной лабораторной работы я изучила несколько структур данных, реализованных в Julia, научилась применять их и операции над ними для решения задач.

# Список литературы{.unnumbered}

::: {#refs}
:::
